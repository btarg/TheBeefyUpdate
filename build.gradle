buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
        classpath group:  'org.parchmentmc', name:  'librarian', version: "${parchmentlibrarian_version}"
    }
}
apply plugin: "java"
apply plugin: "net.minecraftforge.gradle"
apply plugin: 'org.parchmentmc.librarian.forgegradle'

wrapper {
    gradleVersion = '7.3.1'
    distributionType = Wrapper.DistributionType.ALL
}

archivesBaseName = "${mod_id}-${mc_version}-${mod_version}"
java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}-${mc_version}"

    runs {
        client {
            workingDirectory project.file("run")

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/auSrgToMcp/output.srg"

            mods { beefyupdate { source sourceSets.main } }
        }

        server {
            workingDirectory project.file("run")

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/auSrgToMcp/output.srg"

            mods { beefyupdate { source sourceSets.main } }
        }
    }
}

repositories {

}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${archivesBaseName}",
                "Specification-Vendor"    : "${author}",
                "Specification-Version"   : "${mod_version}",
                "Implementation-Title"    : "${archivesBaseName}",
                "Implementation-Version"  : "${mod_version}",
                "Implementation-Vendor"   : "${author}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    afterEvaluate { finalizedBy reobfJar }
}